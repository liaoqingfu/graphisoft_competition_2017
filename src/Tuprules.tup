
.gitignore

export HOME

ifeq (@(COMPILER),)
    CXX = clang++
else
    CXX = @(COMPILER)
endif

LD = $(CXX)

ARCHIVE_TUP = $(TUP_CWD)/archive.tup
COMPILE_TUP = $(TUP_CWD)/compile.tup
LINK_TUP = $(TUP_CWD)/link.tup
TEST_TUP = $(TUP_CWD)/test.tup
UTIL_DIR = $(TUP_CWD)/util

CPP_UTIL_DIR = $(TUP_CWD)/cpp-util
CPP_UTIL_LIB = $(CPP_UTIL_DIR)/lib/libcpp-util.a

TOOLS_DIR = $(TUP_CWD)/tools
NEURAL_NETWORK_DIR = $(TOOLS_DIR)/NeuralNetwork
NEURAL_NETWORK_LIB = $(NEURAL_NETWORK_DIR)/libNeuralNetwork.a
GENETIC_LEARNING_DIR = $(TOOLS_DIR)/GeneticLearning
GENETIC_LEARNING_LIB = $(GENETIC_LEARNING_DIR)/libGeneticLearning.a

CXX = clang++
LD = $(CXX)
AR = ar

export EXTRA_CPP_FLAGS
export EXTRA_LD_FLAGS
export BOOST_LIB

CPP_FLAGS += -std=c++14
CPP_FLAGS += -Wall -Wextra -Wno-mismatched-tags
#CPP_FLAGS += -O0 -g
CPP_FLAGS += -ftemplate-backtrace-limit=0
CPP_FLAGS += $EXTRA_CPP_FLAGS
CPP_FLAGS += -isystem $BOOST_LIB/../include

LD_FLAGS += $EXTRA_LD_FLAGS

!cxx = |> ^ CXX %f^ $(CXX) $(CPP_FLAGS) $(INCLUDE_DIRS) -c %f -o %o |> %B.o
!linker = |> ^ LD %o^ $(LD) $(LD_FLAGS) %f $(LIBS) -o %o |>
!unitTest = |> ^ UT %f^ ./%f && touch %o |> %b.output
